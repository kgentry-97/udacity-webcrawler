Written Questions

Q1. Run the web crawler using the configurations located at src/main/config/written_question_1a.json and
    src/main/config/written_question_1b.json. The only difference between these configurations is that one always uses
    the sequential crawler and the other always uses the parallel crawler. Inspect the profile output in
    profileData.txt.

    If you are using a multi-processor computer, you should notice that SequentialWebCrawler#crawl and
    ParallelWebCrawler#crawl took about the same amount of time, but PageParserImpl#parse took much longer when run with
    the ParallelWebCrawler.

    Why did the parser take more time when run with ParallelWebCrawler?

    -in the parallel crawler the parser was run many more times which the parse to take longer thain the Sequential. as you can see in the results where the Sequential went to 3 pages
    where the paralel went to 32 pages in one run.


Q2. Your manager ran your crawler on her old personal computer, using the configurations from Q1, and she notices that
    the sequential crawler actually outperforms the parallel crawler. She would like to know why.

    (a) Suggest one reason why the sequential web crawler was able to read more web pages than the parallel crawler.
        (Hint: Try setting "parallelism" to 1 in the JSON configs to simulate your manager's computer.)

        - due to the fact the parallelism doesn't work as efficiently in a single core computer

    (b) Suggest one scenario in which the parallel web crawler will almost certainly perform better than the sequential
        crawler. Why will it perform better?

        - when you started parsing more keywords with a larger depth the parallel crawl start becoming more efficient


Q3. Analyze your method profiler through the lens of Aspect Oriented Programming, by answering the following questions:

    (a) What cross-cutting concern is being addressed by the com.udacity.webcrawler.profiler.Profiler class?

    - the performance of the crawler

    (b) What are the join points of the Profiler in the web crawler program?

    - any method that was annotated by @profiled


Q4. Identify three (3) different design patterns used in this project, and explain which interfaces, classes, and/or
    libraries use or implement those design patterns.

    For each pattern, name one thing about the pattern that you LIKED, and one thing you DISLIKED. If you did not like
    anything, you can name two things you disliked.

    - singleton pattern - i like that you create the dependency once and have this available to you in any class that you need it without recreating it
    can make testing hard since any need to make sure that the dependency is created for each test
    - builder pattern - the crawlerConfiguration provides an api to construct the configuration with multiple parameters in a file,
     but does make the code a little less readable.
    - iterator - I like the ability to process large amounts of data quickly, but can be tricky to keep track of open threads


